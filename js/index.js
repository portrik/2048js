!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";const r=new(n(1).Game);!function(){let e=document.getElementById("warning");e.parentNode.removeChild(e),r.setUpGame(document.getElementById("game-area"))}()},function(e,t,n){"use strict";n.r(t),n.d(t,"Game",(function(){return s}));class r{constructor(e){this.colors={2:"#eee4da",4:"#ede0c8",8:"#f2b179",16:"#f59563",32:"#f67c5f",64:"#f65e3b",128:"#edcf72",256:"#edcc61",512:"#edc850",1024:"#edc53f",2048:"#edc53f"},this.value=e,this.color=this.colors[this.value]}merge(){return this.value*=2,this.color=this.colors[this.value],2048==this.value}}class i{constructor(e){this.chance=.2,this.area=e,this.resizeArea(),window.addEventListener("resize",()=>this.resizeArea())}resizeArea(){let e=window.innerWidth,t=window.innerHeight;e>t?(t=Math.round(.9*t),e=t):(e=Math.round(.9*e),t=e),this.width=e,this.height=t;let n=this.area.getContext("2d");n.canvas.width=e,n.canvas.height=t,this.drawBoard()}setUp(e){this.size=e,this.board=new Array(this.size);for(let e=0;e<this.size;++e)this.board[e]=new Array(this.size),this.board[e].fill(null);this.spawnTile(),this.spawnTile(),this.drawBoard()}drawBoard(){let e=Math.round(this.width/(this.size+1)),t=Math.round(e/(this.size+1)),n=this.area.getContext("2d");n.clearRect(0,0,n.canvas.width,n.canvas.height);let r=t,i=t;for(let o=0;o<this.size;++o){for(let s=0;s<this.size;++s){if(this.board[o][s]){n.fillStyle=this.board[o][s].color,n.fillRect(r,i,e,e),n.font="80px Arial",n.textAlign="center",n.fillStyle="black",n.textBaseline="middle";let t=r+Math.round(e/2),h=i+Math.round(e/2)+10;n.fillText(this.board[o][s].value,t,h)}else n.fillStyle="rgba(238, 228, 218, 0.35)",n.fillRect(r,i,e,e);r+=e+t}r=t,i+=e+t}}dispatchVictory(){this.area.dispatchEvent(new Event("victory"))}spawnTile(){let e=[];for(let t=0;t<this.board.length;++t)for(let n=0;n<this.board.length;++n)null==this.board[t][n]&&e.push([t,n]);if(e.length>0){let t=Math.round(Math.random()*(e.length-1)),n=e[t][0],i=e[t][1],o=2;Math.random()<this.chance&&(o=4),this.board[n][i]=new r(o)}else this.area.dispatchEvent(new Event("gameOver"))}moveTiles(){let e=!1;for(let t=0;t<this.size;++t){let n=this.shiftArray(this.board[t]);this.compareArrays(n,this.board[t])||(this.board[t]=n,e=!0)}e&&this.spawnTile(),this.drawBoard()}compareArrays(e,t){let n=!0;for(let r=0;r<e.length;r++)e[r]!=t[r]&&(n=!1);return n}shiftArray(e){let t=e.filter(e=>null!=e),n=!1,r=!1;for(let e=t.length;e<this.size;e++)t.push(null);for(let e=0;e<t.length;e++)null!=t[e]&&null!=t[e+1]&&t[e].value==t[e+1].value&&(t[e].merge()&&(n=!0),t[e+1]=null,r=!0);return r&&(t=this.shiftArray(t)),n&&this.dispatchVictory(),t}}class o{constructor(e){this.keyCodes={ArrowLeft:"Left",ArrowUp:"Up",ArrowRight:"Right",ArrowDown:"Down",a:"Left",w:"Up",d:"Right",s:"Down"},this.touchX=0,this.touchY=0,this.tolerance=50,this.targetElement=e,this.enableController()}enableController(){document.addEventListener("keydown",e=>this.handleKeydown(e)),this.targetElement.addEventListener("touchstart",e=>this.handleTouchStart(e)),this.targetElement.addEventListener("touchend",e=>this.handleTouchEnd(e))}disableController(){document.removeEventListener("keydown",e=>this.handleKeydown(e)),this.targetElement.removeEventListener("touchstart",e=>this.handleTouchStart(e)),this.targetElement.removeEventListener("touchend",e=>this.handleTouchEnd(e))}handleKeydown(e){if(Object.keys(this.keyCodes).indexOf(e.key)>-1){let t=new Event("move"+this.keyCodes[e.key]);this.targetElement.dispatchEvent(t),e.key.includes("Arrow")&&e.preventDefault()}}handleTouchStart(e){e.preventDefault(),this.touchX=Math.round(e.touches[0].screenX),this.touchY=Math.round(e.touches[0].screenY)}handleTouchEnd(e){let t=Math.round(e.changedTouches[0].screenX),n=Math.round(e.changedTouches[0].screenY),r="";Math.abs(n-this.touchY)>this.tolerance?r=n>this.touchY?"Down":"Up":Math.abs(t-this.touchX)>this.tolerance&&(r=t>this.touchX?"Right":"Left"),""!==r&&this.targetElement.dispatchEvent(new Event("move"+r))}}class s{constructor(){this.score=0,this.size=4}setUpGame(e){this.setUpController(e),this.playArea=new i(e),this.playArea.setUp(this.size),e.addEventListener("gameOver",()=>this.gameOver()),e.addEventListener("victory",()=>this.victory())}setUpController(e){this.controller=new o(e),e.addEventListener("moveLeft",()=>this.moveLeft()),e.addEventListener("moveUp",()=>this.moveUp()),e.addEventListener("moveRight",()=>this.moveRight()),e.addEventListener("moveDown",()=>this.moveDown())}moveLeft(){console.log("Moving left"),document.getElementById("debug").innerText="Moving left",this.playArea.moveLeft()}moveUp(){console.log("Moving up"),document.getElementById("debug").innerText="Moving up"}moveRight(){console.log("Moving right"),document.getElementById("debug").innerText="Moving right"}moveDown(){console.log("Moving down"),document.getElementById("debug").innerText="Moving down"}gameOver(){console.log("Game over")}victory(){console.log("Victory")}}}]);